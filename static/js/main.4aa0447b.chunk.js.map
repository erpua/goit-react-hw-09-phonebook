{"version":3,"sources":["components/AppBar/AppBar.module.css","components/AppBar/UserMenu/UserMenu.module.css","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/AppBar/AuthNav/AuthNav.js","components/Filter/Filter.js","components/AppBar/Navigation/Navigation.js","components/AppBar/UserMenu/CustomBadge/CustomBadge.js","components/AppBar/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-selectors.js","components/AppBar/Navigation/Navigation.module.css","components/AppBar/AuthNav/AuthNav.module.css","redux/contacts/contacts-selectors.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js"],"names":["module","exports","items","createReducer","contactsActions","fetchContactsSuccess","state","payload","addContactSuccess","updateContactSuccess","map","contact","id","deleteContactSuccess","filter","filterContacts","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","updateContactRequest","updateContactError","combineReducers","innitialUserState","name","email","user","authActions","registerSuccess","_","logInSuccess","logOutSuccess","getCurrentUserSuccess","token","error","registerError","logInError","getCurrentUserError","isAuthenticated","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","AuthNav","to","exact","className","styles","link","activeClassName","activeLink","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","height","breakpoints","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Filter","classes","dispatch","useDispatch","useSelector","contactsSelectors","getFilter","onChange","useCallback","e","target","value","InputBase","placeholder","root","input","inputProps","Navigation","location","useLocation","isLogIn","authSelectors","getIsLoggedIn","navigation","pathname","StyledBadge","withStyles","badge","right","top","border","background","paper","Badge","CustomBadge","totalContacts","badgeContent","UserMenu","UserEmail","getUserEmail","getFilteredTotalContacts","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","onLogout","authOperations","logOut","Chip","aria-controls","aria-haspopup","onClick","event","currentTarget","icon","label","clickable","Menu","keepMounted","onClose","TransitionComponent","Fade","MenuItem","connect","header","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","HomeView","lazy","SignInView","SignUpView","ContactsView","App","onGetCurrentUser","getCurrentUser","useEffect","fallback","path","ReactDOM","StrictMode","document","getElementById","createAction","getUserName","getContacts","getFilteredContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","getLoading","getTotalContacts","length","axios","defaults","baseURL","headers","Authorization","register","a","registerRequest","post","response","data","message","logOutRequest","logOutError","logIn","logInRequest","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.4aa0447b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__4Wgx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__G5jS4\",\"avatar\":\"UserMenu_avatar__2qubl\",\"name\":\"UserMenu_name__3ZYCM\",\"btn\":\"UserMenu_btn__3jBmI\"};","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport contactsActions from './contacts-actions';\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (state, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsActions.updateContactSuccess]: (state, { payload }) =>\n    state.map(contact => (contact.id === payload.id ? payload : contact)),\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContacts]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n  [contactsActions.updateContactRequest]: () => true,\n  [contactsActions.updateContactSuccess]: () => false,\n  [contactsActions.updateContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport authActions from './auth-actions';\n\nconst innitialUserState = { name: null, email: null };\n\nconst user = createReducer(innitialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.logInSuccess]: (_, { payload }) => payload.user,\n  [authActions.logOutSuccess]: () => innitialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.logInSuccess]: (_, { payload }) => payload.token,\n  [authActions.logOutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.logInError]: (_, { payload }) => payload,\n  [authActions.logOutSuccess]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.logInSuccess]: () => true,\n  [authActions.getCurrentUserRequest]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.logInError]: () => false,\n  [authActions.logOutSuccess]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\n// redux toolkit\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'authToken',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Sign Up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Log In\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\nimport { fade, InputBase, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(3),\n    marginLeft: 0,\n    width: '100%',\n    height: '90%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 1),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nexport default function Filter() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const onChange = useCallback(\n    e => dispatch(contactsActions.filterContacts(e.target.value)),\n    [dispatch],\n  );\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Search contact…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport authSelectors from '../../../redux/auth/auth-selectors';\nimport Filter from '../../Filter/Filter';\nimport styles from './Navigation.module.css';\n\nexport default function Navigation() {\n  const location = useLocation();\n  const isLogIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <nav className={styles.navigation}>\n      <NavLink\n        to=\"/\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        HOME\n      </NavLink>\n      {isLogIn && (\n        <>\n          <NavLink\n            to=\"/contacts\"\n            exact\n            className={styles.link}\n            activeClassName={styles.activeLink}\n          >\n            Contacts\n          </NavLink>\n        </>\n      )}\n      {location.pathname === '/contacts' && <Filter />}\n    </nav>\n  );\n}\n","import Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/Contacts';\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\nconst CustomBadge = ({ totalContacts }) => {\n  return (\n    <StyledBadge badgeContent={totalContacts} color=\"secondary\">\n      <ContactsIcon />\n    </StyledBadge>\n  );\n};\n\nexport default CustomBadge;\n","import React, { useCallback } from 'react';\nimport { useLocation } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport authSelectors from '../../../redux/auth/auth-selectors';\nimport authOperations from '../../../redux/auth/auth-operations';\nimport contactsSelectors from '../../../redux/contacts/contacts-selectors';\n\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FaceIcon from '@material-ui/icons/Face';\nimport CustomBadge from './CustomBadge/CustomBadge';\nimport './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const UserEmail = useSelector(authSelectors.getUserEmail);\n  const totalContacts = useSelector(contactsSelectors.getFilteredTotalContacts);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onLogout = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div className=\"menu\">\n      {location.pathname === '/contacts' && (\n        <div className=\"badge\">\n          <CustomBadge className=\"badge\" totalContacts={totalContacts} />\n        </div>\n      )}\n\n      <Chip\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        icon={<FaceIcon />}\n        label={UserEmail}\n        clickable\n        color=\"primary\"\n      />\n\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <MenuItem onClick={handleClose}>My account</MenuItem>\n        <MenuItem onClick={onLogout}>Logout</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport AuthNav from './AuthNav/AuthNav';\nimport Navigation from './Navigation/Navigation';\nimport UserMenu from './UserMenu/UserMenu';\nimport styles from './AppBar.module.css';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsLoggedIn(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  component: Component,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLogIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isLogIn ? <Component {...props} /> : <Redirect to={redirectTo} />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  component: Component,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLogIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isLogIn && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n}\n","import { Suspense, lazy, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router';\nimport AppBar from './components/AppBar';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'));\nconst SignInView = lazy(() => import('./views/LoginView/SignInView'));\nconst SignUpView = lazy(() => import('./views/RegisterView/SignUpView'));\nconst ContactsView = lazy(() => import('./views/ContactsView/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  const onGetCurrentUser = useCallback(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    onGetCurrentUser();\n  }, [onGetCurrentUser]);\n\n  return (\n    <>\n      <AppBar />\n      <Suspense fallback={<p> Downloading ...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={SignUpView}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={SignInView}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsView}\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst updateContactRequest = createAction('contacts/updateContactRequest');\nconst updateContactSuccess = createAction('contacts/updateContactSuccess');\nconst updateContactError = createAction('contacts/updateContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst filterContacts = createAction('contacts/changeFilter');\n\nconst contactsActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n};\n\nexport default contactsActions;\n","const getIsLoggedIn = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\nconst getUserEmail = state => state.auth.user.email;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getUserEmail,\n};\nexport default authSelectors;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1NuDV\",\"activeLink\":\"Navigation_activeLink__39saH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2NuVs\",\"activeLink\":\"AuthNav_activeLink__2wo_e\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getLoading = state => state.contacts.loading;\n\nconst getTotalContacts = state => getContacts(state).length;\nconst getFilteredTotalContacts = state => getFilteredContacts(state).length;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n  getLoading,\n  getFilteredContacts,\n  getTotalContacts,\n  getFilteredTotalContacts,\n};\nexport default contactsSelectors;\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = user => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', user);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = user => async dispatch => {\n  dispatch(authActions.logInRequest());\n\n  try {\n    const response = await axios.post('/users/login', user);\n\n    token.set(response.data.token);\n    dispatch(authActions.logInSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.logInError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logOutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logOutSuccess());\n  } catch (error) {\n    dispatch(authActions.logOutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst authOperations = { register, logOut, logIn, getCurrentUser };\n\nexport default authOperations;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst logInRequest = createAction('auth/logInRequest');\nconst logInSuccess = createAction('auth/logInSuccess');\nconst logInError = createAction('auth/logInError');\n\nconst logOutRequest = createAction('auth/logOutRequest');\nconst logOutSuccess = createAction('auth/logOutSuccess');\nconst logOutError = createAction('auth/logOutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst authActions = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logInRequest,\n  logInSuccess,\n  logInError,\n  logOutRequest,\n  logOutSuccess,\n  logOutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default authActions;\n"],"sourceRoot":""}